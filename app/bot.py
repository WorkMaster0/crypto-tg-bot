import telebot
from app.config import TELEGRAM_BOT_TOKEN
from app.analytics import get_price, generate_signal, trend_strength
from app.chart import plot_candles

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "üöÄ Crypto Analysis Bot is alive! Use /analyze BTCUSDT")

@bot.message_handler(commands=['price'])
def price_handler(message):
    args = message.text.split()
    if len(args) > 1:
        symbol = args[1].upper()
        price = get_price(symbol)
        if price > 0:
            bot.reply_to(message, f"üí∞ *{symbol}* price: `${price:.2f}`")
        else:
            bot.reply_to(message, "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É")
    else:
        bot.reply_to(message, "‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /price BTCUSDT")

@bot.message_handler(commands=['analyze'])
def analyze_handler(message):
    args = message.text.split()
    if len(args) > 1:
        symbol = args[1].upper()
        signal = generate_signal(symbol)
        bot.reply_to(message, signal, parse_mode='Markdown')
    else:
        bot.reply_to(message, "‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /analyze BTCUSDT")

@bot.message_handler(commands=['trend'])
def trend_handler(message):
    args = message.text.split()
    if len(args) > 1:
        symbol = args[1].upper()
        trend = trend_strength(symbol)
        bot.reply_to(message, trend, parse_mode='Markdown')
    else:
        bot.reply_to(message, "‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /trend BTCUSDT")

@bot.message_handler(commands=['chart'])
def chart_handler(message):
    args = message.text.split()
    if len(args) > 1:
        symbol = args[1].upper()
        img = plot_candles(symbol)
        if img:
            bot.send_photo(message.chat.id, img, caption=f"üìà –ì—Ä–∞—Ñ—ñ–∫ {symbol} (1h)")
        else:
            bot.reply_to(message, "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–±—É–¥—É–≤–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫")
    else:
        bot.reply_to(message, "‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /chart BTCUSDT")

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
üìå *–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:*
/start - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/analyze BTCUSDT - –ê–Ω–∞–ª—ñ–∑ + —Ä—ñ–≤–Ω—ñ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏/–æ–ø–æ—Ä—É
/price BTCUSDT - –ü–æ—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞
/trend BTCUSDT - –ê–Ω–∞–ª—ñ–∑ —Ç—Ä–µ–Ω–¥—É
/chart BTCUSDT - –ì—Ä–∞—Ñ—ñ–∫ —Ü—ñ–Ω–∏
/help - –î–æ–≤—ñ–¥–∫–∞

üî∏ *–ü—Ä–∏–∫–ª–∞–¥–∏:*
/analyze BTCUSDT
/price ETHUSDT
/chart SOLUSDT
"""
    bot.reply_to(message, help_text, parse_mode='Markdown')

def main():
    print("Bot is running...")
    bot.infinity_polling()

if __name__ == '__main__':
    main()
